const path = require('path');

const testHelperPath = path.resolve('config/testHelper.js');

process.env.BABEL_ENV = 'components';
process.env.NODE_ENV = 'components';

module.exports = (config) => {
    config.set({
        // use the Chrome browser
        browsers: ['Chrome'],
        // use Jasmine
        frameworks: ['jasmine'],

        // files that Karma will server to the browser
        files: [
            // entry file for Webpack
            testHelperPath,
        ],

        // before serving test/testHelper.js to the browser
        preprocessors: {
            [testHelperPath]: [
                // use karma-webpack to preprocess the file via webpack
                'webpack',
                // use karma-sourcemap-loader to utilize sourcemaps generated by webpack
                'sourcemap',
            ],
        },

        // webpack configuration used by karma-webpack
        webpack: {
            // generate sourcemaps
            devtool: 'inline-source-map',
            // enzyme-specific setup
            externals: {
                cheerio: 'window',
                'react/addons': true,
                'react/lib/ExecutionEnvironment': true,
                'react/lib/ReactContext': true,
            },
            module: {
                // use same loaders as Create React App
                loaders: [
                    {
                        exclude: [/\.(js|jsx)$/, /\.css$/, /\.json$/],
                        loader: 'file-loader',
                        query: {
                            name: 'static/media/[name].[hash:8].[ext]',
                        },
                    },
                    {
                        test: /\.(js|jsx)$/,
                        exclude: /node_modules/,
                        loader: 'babel-loader',
                        query: {
                            presets: [
                                'env',
                                'react',
                                'airbnb',
                                'es2015',
                                'stage-2',
                            ],
                        },
                    },
                    {
                        test: /\.css$/,
                        loader: 'style-loader!css-loader',
                    },
                    {
                        test: /\.json$/,
                        loader: 'json-loader',
                    },
                ],
            },
            // relative path starts out at the src folder when importing modules
            resolve: {
                modules: [path.join(__dirname, 'src'), 'node_modules'],
            },
        },

        webpackMiddleware: {
            // only output webpack error messages
            stats: 'errors-only',
        },
    });
};
